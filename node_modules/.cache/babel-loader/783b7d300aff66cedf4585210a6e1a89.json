{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchMyTodos, addTodo, deleteTodo, updateTodo } from \"../utils/api\";\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    //Update the redux state with DB\n    stateUpdate: async (state, action) => {\n      console.log(\"State updating\");\n      const todos = await fetchMyTodos();\n      state.push(action.payload);\n      return;\n    },\n    //Adding todos\n    addTodos: (state, action) => {\n      addTodo(action.payload.item, action.payload.id);\n      state.push(action.payload);\n      return state;\n    },\n    //remove todos\n    removeTodos: (state, action) => {\n      deleteTodo(action.payload);\n      return state.filter(item => item.id !== action.payload);\n    },\n    //update todos\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          updateTodo(action.payload.id, action.payload.item);\n          return { ...todo,\n            item: action.payload.item\n          };\n        }\n\n        return todo;\n      });\n    },\n    //favourite\n    favouriteTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          if (todo.favourite) {\n            return { ...todo,\n              favourite: false\n            };\n          }\n\n          return { ...todo,\n            favourite: true\n          };\n        }\n\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  favouriteTodos\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","map":{"version":3,"names":["createSlice","fetchMyTodos","addTodo","deleteTodo","updateTodo","initialState","addTodoReducer","name","reducers","stateUpdate","state","action","console","log","todos","push","payload","addTodos","item","id","removeTodos","filter","updateTodos","map","todo","favouriteTodos","favourite","actions","reducer"],"sources":["/Users/champikamendis/Desktop/todos-frontend-reactjs/src/redux/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchMyTodos, addTodo, deleteTodo, updateTodo } from \"../utils/api\";\n\nconst initialState = [];\n\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  \n  reducers: {\n    //Update the redux state with DB\n    stateUpdate: async(state, action) => {\n      console.log(\"State updating\");\n      const todos = await fetchMyTodos();\n      state.push(action.payload)\n      return \n      \n\n    },\n\n    //Adding todos\n    addTodos: (state, action) => {\n      addTodo(action.payload.item, action.payload.id)\n      state.push(action.payload);\n\n      return state;\n    },\n\n    //remove todos\n    removeTodos: (state, action) => {\n      deleteTodo(action.payload)\n\n      return state.filter((item) => item.id !== action.payload);\n    },\n\n    //update todos\n    updateTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload.id) {\n          updateTodo(action.payload.id, action.payload.item)\n\n          return {\n            ...todo,\n            item: action.payload.item,\n          };\n        }\n\n        return todo;\n      });\n    },\n\n    //favourite\n    favouriteTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          if (todo.favourite) {\n\n            return {\n              ...todo,\n              favourite: false,\n            };\n          }\n\n          return {\n            ...todo,\n            favourite: true,\n          };\n        }\n\n        return todo;\n      });\n    },\n  },\n});\n\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos,\n  favouriteTodos,\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,UAA5C,QAA8D,cAA9D;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,cAAc,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,OAD2B;EAEjCF,YAFiC;EAIjCG,QAAQ,EAAE;IACR;IACAC,WAAW,EAAE,OAAMC,KAAN,EAAaC,MAAb,KAAwB;MACnCC,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACA,MAAMC,KAAK,GAAG,MAAMb,YAAY,EAAhC;MACAS,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACK,OAAlB;MACA;IAGD,CATO;IAWR;IACAC,QAAQ,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAC3BT,OAAO,CAACS,MAAM,CAACK,OAAP,CAAeE,IAAhB,EAAsBP,MAAM,CAACK,OAAP,CAAeG,EAArC,CAAP;MACAT,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACK,OAAlB;MAEA,OAAON,KAAP;IACD,CAjBO;IAmBR;IACAU,WAAW,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAC9BR,UAAU,CAACQ,MAAM,CAACK,OAAR,CAAV;MAEA,OAAON,KAAK,CAACW,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACK,OAA1C,CAAP;IACD,CAxBO;IA0BR;IACAM,WAAW,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAC9B,OAAOD,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;QACzB,IAAIA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACK,OAAP,CAAeG,EAA/B,EAAmC;UACjCf,UAAU,CAACO,MAAM,CAACK,OAAP,CAAeG,EAAhB,EAAoBR,MAAM,CAACK,OAAP,CAAeE,IAAnC,CAAV;UAEA,OAAO,EACL,GAAGM,IADE;YAELN,IAAI,EAAEP,MAAM,CAACK,OAAP,CAAeE;UAFhB,CAAP;QAID;;QAED,OAAOM,IAAP;MACD,CAXM,CAAP;IAYD,CAxCO;IA0CR;IACAC,cAAc,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;MACjC,OAAOD,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;QACzB,IAAIA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACK,OAAvB,EAAgC;UAC9B,IAAIQ,IAAI,CAACE,SAAT,EAAoB;YAElB,OAAO,EACL,GAAGF,IADE;cAELE,SAAS,EAAE;YAFN,CAAP;UAID;;UAED,OAAO,EACL,GAAGF,IADE;YAELE,SAAS,EAAE;UAFN,CAAP;QAID;;QAED,OAAOF,IAAP;MACD,CAjBM,CAAP;IAkBD;EA9DO;AAJuB,CAAD,CAAlC;AAsEA,OAAO,MAAM;EACXP,QADW;EAEXG,WAFW;EAGXE,WAHW;EAIXG;AAJW,IAKTnB,cAAc,CAACqB,OALZ;AAMP,OAAO,MAAMC,OAAO,GAAGtB,cAAc,CAACsB,OAA/B"},"metadata":{},"sourceType":"module"}